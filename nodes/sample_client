#!/usr/bin/env python
#
# Copyright 2020, Stefano Dell'Orto
# License: BSD
#   https://raw.githubusercontent.com/allxone/sensehat_ros/master/LICENSE
#

"""Sample client to call sensehat_ros service methods."""

from __future__ import print_function
import rospy
from sensehat_ros.srv import *
from sensehat_ros.msg import Environmental
import random

def getEnvironmental_client():
    try:
        getEnvironmental = rospy.ServiceProxy('GetEnvironmental', GetEnvironmental)
        resp1 = getEnvironmental()
        return resp1.environmental
    except rospy.ServiceException, e:
        print("Service call failed: %s"%e)

if __name__ == "__main__":
    # Wait for services
    rospy.wait_for_service('GetEnvironmental')
    rospy.wait_for_service('Clear')
    rospy.wait_for_service('SetPixels')

    # Get Environmental data
    environmental = getEnvironmental_client()
    print("Received Environmental (H: %s, TH: %s, TP: %s, P: %s)"%(
        environmental.humidity, 
        environmental.temperature_from_humidity, 
        environmental.temperature_from_pressure, 
        environmental.pressure)
    )
    
    # Reset LED Matrix
    print("Reset the Matrix to white")
    R = [255, 255, 255]
    clear = rospy.ServiceProxy('Clear', Clear)
    clear(R, 1)

    # Display some pixels on the LED Matrix
    print("Show some random pixel colors")
    svc = rospy.ServiceProxy('SetPixels', SetPixels)
    for i in range(6):
        pixels = map(lambda x : 
            (random.randint(0,255), random.randint(0,255), random.randint(0,255)),
            range(64))
        (r, g, b) = zip(*pixels)
        svc(r, g, b, 0.5)

    # Reset LED Matrix
    print("Reset the Matrix to black")
    R = [0, 0, 0]
    clear(R, 1)